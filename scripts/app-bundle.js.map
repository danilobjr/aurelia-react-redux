{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","bkn-datagrid/bkn-datagrid.tsx","bkn-datagrid/components/BknDatagrid.tsx","bkn-datagrid/components/actions.ts","bkn-datagrid/components/reducers.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { IBknDatagridConfig } from './bkn-datagrid/components/BknDatagrid'\r\n\r\nexport interface IPerson {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n}\r\n\r\nexport class App {\r\n    constructor(\r\n        public people: IPerson[],\r\n        public gridConfig: IBknDatagridConfig[]\r\n    ) {\r\n        this.people = [\r\n            { id: 1, name: 'Danilo', email: 'danilo@beakyn.com' },\r\n            { id: 2, name: 'Abraao', email: 'abraao@beakyn.com' },\r\n            { id: 3, name: 'Ricardo', email: 'ricardo@beakyn.com' },\r\n            { id: 4, name: 'Juan', email: 'juan@beakyn.com' }\r\n        ];\r\n\r\n        this.gridConfig = [\r\n            { \r\n                key: 'name',\r\n                name: 'Name'\r\n            },\r\n            { \r\n                key: 'email',\r\n                name: 'Email'\r\n            }\r\n        ];\r\n    }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {inject, bindable, noView} from 'aurelia-framework';\r\nimport { BknDatagrid, IBknDatagridConfig } from './components/BknDatagrid';\r\n\r\n@noView()\r\n@inject(Element)\r\nexport class BknDatagridCustomElement {\r\n    @bindable data: any[];\r\n    @bindable config: IBknDatagridConfig[];\r\n\r\n    private element: Element;\r\n    \r\n    constructor(element: Element) {\r\n        this.element = element;\r\n    }\r\n    \r\n    render() {\r\n        ReactDOM.render(\r\n            <BknDatagrid \r\n                data={this.data} \r\n                config={this.config}\r\n            />,\r\n            this.element\r\n        );\r\n    }\r\n    \r\n    bind() {\r\n        this.render();\r\n    }\r\n    \r\n    /**\r\n     * Data Changed\r\n     * \r\n     * An automatic callback function when our \"data\"\r\n     * bindable value changes. We need to rebind the React\r\n     * element to get the new data from the ViewModel.\r\n     * \r\n     * @param {any} newVal The updated data\r\n     * @returns {void}\r\n     * \r\n     */\r\n    dataChanged(newVal) {\r\n        this.bind();\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\ninterface IBknDatagridConfig {\r\n    key: string;\r\n    name: string;\r\n}\r\n\r\ninterface IProps {\r\n    data: any[];\r\n    config: IBknDatagridConfig[];\r\n}\r\n\r\nclass BknDatagrid extends React.Component<IProps, any> {\r\n    private dataPropertiesForRenderTableCells: string[];\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.dataPropertiesForRenderTableCells = this.props.config.map(c => c.key);\r\n    }\r\n\r\n    static defaultProperties: Partial<IProps> = {\r\n        data: []\r\n    }\r\n    \r\n    render() {\r\n        if (!this.props.data.length) {\r\n            return null;\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>{this.renderHeaders()}</thead>\r\n                    <tbody>{this.renderBody()}</tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderHeaders() {\r\n        return this.props.config.map((c, index) => \r\n            <th key={index}>{c.name}</th>\r\n        );\r\n    }\r\n\r\n    renderBody() {\r\n        const { config, data }: IProps = this.props;\r\n\r\n        return data.map((d, index) => \r\n            <tr key={index}>\r\n                {this.renderCells(d)}\r\n            </tr>\r\n        );\r\n    }\r\n\r\n    renderCells(data) {\r\n        return this.dataPropertiesForRenderTableCells.map((property, index) => \r\n            <td key={index}>{data[property]}</td>\r\n        );\r\n    }\r\n}\r\n\r\nexport {\r\n    BknDatagrid,\r\n    IBknDatagridConfig\r\n}\r\n","export type SORT = 'bkn-datagrid.components.actions.SORT';\r\nexport const SORT: SORT = 'bkn-datagrid.components.actions.SORT';\r\n\r\nexport type SortAction = {\r\n    type: SORT;\r\n    columnName: string;\r\n};\r\n\r\nexport type OtherAction = { type: '' };\r\nexport const OtherAction: OtherAction = { type: '' };\r\n\r\nexport const sortByColumnName = (columnName: string): SortAction => ({\r\n    type: SORT,\r\n    columnName\r\n});\r\n","import { SORT, SortAction, OtherAction } from './actions'\r\n\r\ntype BknDatagridAction = \r\n    SortAction |\r\n    OtherAction;\r\n\r\nconst initialState = 'updatedAt';\r\n\r\nexport const bknDatagridSortingReducer = (state: string = initialState, action: BknDatagridAction = OtherAction) => {\r\n    switch (action.type) {\r\n        case SORT:\r\n            return Object.assign({}, state, { \r\n                bknDatagridSortColumnName: action.columnName \r\n            });\r\n        default:\r\n            return state;            \r\n    }\r\n}\r\n"],"sourceRoot":".."}